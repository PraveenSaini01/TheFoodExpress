{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RestaurantService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:9000/api/v3';\n    this.updated = new EventEmitter();\n  }\n  handleError(error) {\n    console.error('An error occurred:', error);\n    const errorMessage = error.error instanceof ErrorEvent ? `Client-side error: ${error.error.message}` : `Server-side error: ${error.status} - ${error.message}`;\n    return throwError(errorMessage);\n  }\n  // registerRestaurant(restaurant: any) {\n  //   console.log(restaurant)\n  //   let httpHeader = new HttpHeaders({\n  //     'Authorization':'Bearer ' +localStorage.getItem(\"token\")\n  //   });\n  //   console.log(localStorage.getItem(\"token\"));\n  //   let requestOption = {headers:httpHeader}\n  //   return this.http.post(`${this.apiUrl}/restaurant/register`,restaurant,requestOption);\n  // }\n  getAllRestaurants() {\n    console.log(\"in restaurant service\");\n    return this.http.get(`${this.apiUrl}/restaurant`).pipe(catchError(this.handleError));\n  }\n  getRestaurant(restaurantId) {\n    return this.http.get(`${this.apiUrl}/restaurant/${restaurantId}`);\n  }\n  getFoodsForRestaurantId(restaurantId) {\n    return this.http.get(`${this.apiUrl}/${restaurantId}/foods`);\n  }\n  getAllFoodMenu(restaurantId) {\n    return this.http.get(`${this.apiUrl}/restaurant/${restaurantId}/foodmenu`).pipe(catchError(this.handleError));\n  }\n  getFoodMenuById(itemId) {\n    return this.http.get(`${this.apiUrl}/foodmenu/${itemId}`).pipe(catchError(this.handleError));\n  }\n  static #_ = this.ɵfac = function RestaurantService_Factory(t) {\n    return new (t || RestaurantService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RestaurantService,\n    factory: RestaurantService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EventEmitter","throwError","catchError","RestaurantService","constructor","http","apiUrl","updated","handleError","error","console","errorMessage","ErrorEvent","message","status","getAllRestaurants","log","get","pipe","getRestaurant","restaurantId","getFoodsForRestaurantId","getAllFoodMenu","getFoodMenuById","itemId","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\New folder (2)\\TheFoodExpress\\TheFoodExpress\\src\\app\\service\\restaurant.service.ts"],"sourcesContent":["\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, pipe, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Restaurant } from '../model/restaurant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantService {\n  private apiUrl = 'http://localhost:9000/api/v3';\n  updated:EventEmitter<boolean>=new EventEmitter();\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: any): Observable<never> {\n    console.error('An error occurred:', error);\n    const errorMessage = error.error instanceof ErrorEvent ?\n      `Client-side error: ${error.error.message}` :\n      `Server-side error: ${error.status} - ${error.message}`;\n    return throwError(errorMessage);\n  }\n\n\n  // registerRestaurant(restaurant: any) {\n  //   console.log(restaurant)\n  //   let httpHeader = new HttpHeaders({\n  //     'Authorization':'Bearer ' +localStorage.getItem(\"token\")\n  //   });\n  //   console.log(localStorage.getItem(\"token\"));\n  //   let requestOption = {headers:httpHeader}\n  //   return this.http.post(`${this.apiUrl}/restaurant/register`,restaurant,requestOption);\n  // }\n\n  getAllRestaurants(): Observable<Array<Restaurant>> {\n    console.log(\"in restaurant service\")\n    return this.http.get<Array<Restaurant>>(`${this.apiUrl}/restaurant`)\n\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  getRestaurant(restaurantId?: string): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/restaurant/${restaurantId}`);\n  }\n\n  getFoodsForRestaurantId(restaurantId: string): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/${restaurantId}/foods`);\n  }\n\n  getAllFoodMenu(restaurantId: string): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/restaurant/${restaurantId}/foodmenu`)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  getFoodMenuById(itemId: number): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/foodmenu/${itemId}`)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n"],"mappings":"AACA,SAASA,YAAY,QAAoB,eAAe;AAExD,SAA2BC,UAAU,QAAQ,MAAM;AACnD,SAASC,UAAU,QAAQ,gBAAgB;;;AAM3C,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,8BAA8B;IAC/C,KAAAC,OAAO,GAAuB,IAAIP,YAAY,EAAE;EACR;EAEhCQ,WAAWA,CAACC,KAAU;IAC5BC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAME,YAAY,GAAGF,KAAK,CAACA,KAAK,YAAYG,UAAU,GACpD,sBAAsBH,KAAK,CAACA,KAAK,CAACI,OAAO,EAAE,GAC3C,sBAAsBJ,KAAK,CAACK,MAAM,MAAML,KAAK,CAACI,OAAO,EAAE;IACzD,OAAOZ,UAAU,CAACU,YAAY,CAAC;EACjC;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAI,iBAAiBA,CAAA;IACfL,OAAO,CAACM,GAAG,CAAC,uBAAuB,CAAC;IACpC,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAoB,GAAG,IAAI,CAACX,MAAM,aAAa,CAAC,CAEjEY,IAAI,CACHhB,UAAU,CAAC,IAAI,CAACM,WAAW,CAAC,CAC7B;EACL;EAEAW,aAAaA,CAACC,YAAqB;IACjC,OAAO,IAAI,CAACf,IAAI,CAACY,GAAG,CAAM,GAAG,IAAI,CAACX,MAAM,eAAec,YAAY,EAAE,CAAC;EACxE;EAEAC,uBAAuBA,CAACD,YAAoB;IAC1C,OAAO,IAAI,CAACf,IAAI,CAACY,GAAG,CAAQ,GAAG,IAAI,CAACX,MAAM,IAAIc,YAAY,QAAQ,CAAC;EACrE;EAEAE,cAAcA,CAACF,YAAoB;IACjC,OAAO,IAAI,CAACf,IAAI,CAACY,GAAG,CAAQ,GAAG,IAAI,CAACX,MAAM,eAAec,YAAY,WAAW,CAAC,CAC9EF,IAAI,CACHhB,UAAU,CAAC,IAAI,CAACM,WAAW,CAAC,CAC7B;EACL;EAEAe,eAAeA,CAACC,MAAc;IAC5B,OAAO,IAAI,CAACnB,IAAI,CAACY,GAAG,CAAQ,GAAG,IAAI,CAACX,MAAM,aAAakB,MAAM,EAAE,CAAC,CAC7DN,IAAI,CACHhB,UAAU,CAAC,IAAI,CAACM,WAAW,CAAC,CAC7B;EACL;EAAC,QAAAiB,CAAA,G;qBArDUtB,iBAAiB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjB3B,iBAAiB;IAAA4B,OAAA,EAAjB5B,iBAAiB,CAAA6B,IAAA;IAAAC,UAAA,EAFhB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}