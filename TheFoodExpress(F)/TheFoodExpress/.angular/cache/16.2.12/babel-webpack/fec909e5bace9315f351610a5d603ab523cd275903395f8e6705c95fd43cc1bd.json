{"ast":null,"code":"// import { EventEmitter, Injectable } from '@angular/core';\n// import { HttpClient, HttpHeaders } from '@angular/common/http';\n// import { Observable, pipe, throwError } from 'rxjs';\n// import { catchError } from 'rxjs/operators';\n// import { Restaurant } from '../model/restaurant';\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class RestaurantService {\n//   private apiUrl = 'http://localhost:9000/api/v3';\n//   updated:EventEmitter<boolean>=new EventEmitter();\n//   constructor(private http: HttpClient) { }\n//   private handleError(error: any): Observable<never> {\n//     console.error('An error occurred:', error);\n//     const errorMessage = error.error instanceof ErrorEvent ?\n//       `Client-side error: ${error.error.message}` :\n//       `Server-side error: ${error.status} - ${error.message}`;\n//     return throwError(errorMessage);\n//   }\n//   registerRestaurant(restaurant: any) {\n//     console.log(restaurant)\n//     let httpHeader = new HttpHeaders({\n//       'Authorization':'Bearer ' +localStorage.getItem(\"token\")\n//     });\n//     console.log(localStorage.getItem(\"token\"));\n//     let requestOption = {headers:httpHeader}\n//     return this.http.post(`${this.apiUrl}/register`,restaurant,requestOption);\n//   }\n//   getAllRestaurants(): Observable<Array<Restaurant>> {\n//     console.log(\"in restaurant service\")\n//     return this.http.get<Array<Restaurant>>(`${this.apiUrl}/restaurant`)\n//       .pipe(\n//         catchError(this.handleError)\n//       );\n//   }\n//   getRestaurant(restaurantId?: string): Observable<any> {\n//     return this.http.get<any>(`${this.apiUrl}/restaurant/${restaurantId}`);\n//   }\n//   getFoodsForRestaurantId(restaurantId: string): Observable<any[]> {\n//     return this.http.get<any[]>(`${this.apiUrl}/${restaurantId}/foods`);\n//   }\n//   getAllFoodMenu(restaurantId: string): Observable<any[]> {\n//     return this.http.get<any[]>(`${this.apiUrl}/restaurant/${restaurantId}/foodmenu`)\n//       .pipe(\n//         catchError(this.handleError)\n//       );\n//   }\n//   getFoodMenuById(itemId: number): Observable<any[]> {\n//     return this.http.get<any[]>(`${this.apiUrl}/foodmenu/${itemId}`)\n//       .pipe(\n//         catchError(this.handleError)\n//       );\n//   }\n// }","map":{"version":3,"names":[],"sources":["E:\\New folder (2)\\TheFoodExpress\\TheFoodExpress\\src\\app\\service\\restaurant.service.ts"],"sourcesContent":["\n// import { EventEmitter, Injectable } from '@angular/core';\n// import { HttpClient, HttpHeaders } from '@angular/common/http';\n// import { Observable, pipe, throwError } from 'rxjs';\n// import { catchError } from 'rxjs/operators';\n// import { Restaurant } from '../model/restaurant';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class RestaurantService {\n//   private apiUrl = 'http://localhost:9000/api/v3';\n//   updated:EventEmitter<boolean>=new EventEmitter();\n//   constructor(private http: HttpClient) { }\n\n//   private handleError(error: any): Observable<never> {\n//     console.error('An error occurred:', error);\n//     const errorMessage = error.error instanceof ErrorEvent ?\n//       `Client-side error: ${error.error.message}` :\n//       `Server-side error: ${error.status} - ${error.message}`;\n//     return throwError(errorMessage);\n//   }\n\n\n//   registerRestaurant(restaurant: any) {\n//     console.log(restaurant)\n//     let httpHeader = new HttpHeaders({\n//       'Authorization':'Bearer ' +localStorage.getItem(\"token\")\n//     });\n//     console.log(localStorage.getItem(\"token\"));\n//     let requestOption = {headers:httpHeader}\n//     return this.http.post(`${this.apiUrl}/register`,restaurant,requestOption);\n//   }\n\n//   getAllRestaurants(): Observable<Array<Restaurant>> {\n//     console.log(\"in restaurant service\")\n//     return this.http.get<Array<Restaurant>>(`${this.apiUrl}/restaurant`)\n\n//       .pipe(\n//         catchError(this.handleError)\n//       );\n//   }\n\n//   getRestaurant(restaurantId?: string): Observable<any> {\n//     return this.http.get<any>(`${this.apiUrl}/restaurant/${restaurantId}`);\n//   }\n\n//   getFoodsForRestaurantId(restaurantId: string): Observable<any[]> {\n//     return this.http.get<any[]>(`${this.apiUrl}/${restaurantId}/foods`);\n//   }\n\n//   getAllFoodMenu(restaurantId: string): Observable<any[]> {\n//     return this.http.get<any[]>(`${this.apiUrl}/restaurant/${restaurantId}/foodmenu`)\n//       .pipe(\n//         catchError(this.handleError)\n//       );\n//   }\n\n//   getFoodMenuById(itemId: number): Observable<any[]> {\n//     return this.http.get<any[]>(`${this.apiUrl}/foodmenu/${itemId}`)\n//       .pipe(\n//         catchError(this.handleError)\n//       );\n//   }\n// }\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}