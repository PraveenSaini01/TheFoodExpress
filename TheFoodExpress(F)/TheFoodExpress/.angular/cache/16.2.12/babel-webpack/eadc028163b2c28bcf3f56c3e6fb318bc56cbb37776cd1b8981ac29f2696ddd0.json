{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let RestaurantAddComponent = class RestaurantAddComponent {\n  //   restaurant = {\n  //     restaurantId: '',\n  //     restaurantName: '',\n  //     description: '',\n  //     location: '',\n  //     rating: '',\n  //     restaurantImage: '',\n  //   };\n  // constructor(private route:Router){}\n  //   onSubmit() {\n  //     // Handle form submission logic here\n  //     console.log('Restaurant details submitted:', this.restaurant);\n  //     this.route.navigateByUrl(\"/restaurant-list\")\n  //   }\n  constructor(fb, service, route, tokenService) {\n    this.fb = fb;\n    this.service = service;\n    this.route = route;\n    this.tokenService = tokenService;\n    this.role = this.tokenService.getUserEmail();\n    this.restaurants = [];\n    this.addform = this.fb.group({\n      restaurantId: ['', Validators.required],\n      restaurantName: ['', Validators.required],\n      imageUrl: ['', Validators.required],\n      location: ['', Validators.required],\n      description: ['', Validators.required],\n      rating: ['', Validators.required]\n    });\n  }\n  addRestaurant() {\n    console.log(this.role);\n    if (this.role === \"admin@gmail.com\") {\n      if (this.addform.valid) {\n        this.service.registerRestaurant(this.addform.value).subscribe(response => {\n          alert(`restaurant is added successfully ` + response);\n          this.service.updated.emit(true);\n          this.addform.reset();\n          this.route.navigateByUrl(\"/restaurent-list\");\n        }, error => {\n          alert('add all the particulars ' + error);\n        });\n      }\n    } else {\n      alert(\"You are not authorized to add or delete \" + Error);\n    }\n  }\n  update() {\n    // if(this.addform.valid){\n    //     this.service.updateRestaurant(this.addform.value,this.addform.value.restaurantId).subscribe(\n    //       response=>{\n    //         alert(`restaurant has been updated`);\n    //         this.service.updated.emit(true);\n    //         this.addform.reset();\n    //       },\n    //       error=>{\n    //         alert(`update is not possible`);\n    //       }\n    //     )\n    //}\n  }\n};\nRestaurantAddComponent = __decorate([Component({\n  selector: 'app-restaurant-add',\n  templateUrl: './restaurant-add.component.html',\n  styleUrls: ['./restaurant-add.component.css']\n})], RestaurantAddComponent);","map":{"version":3,"names":["Component","Validators","RestaurantAddComponent","constructor","fb","service","route","tokenService","role","getUserEmail","restaurants","addform","group","restaurantId","required","restaurantName","imageUrl","location","description","rating","addRestaurant","console","log","valid","registerRestaurant","value","subscribe","response","alert","updated","emit","reset","navigateByUrl","error","Error","update","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\New folder (2)\\TheFoodExpress\\TheFoodExpress\\src\\app\\restaurant-add\\restaurant-add.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { RestaurantService } from '../service/restaurant.service';\nimport { TokenInterceptorService } from '../service/token-interceptor.service';\n\n@Component({\n  selector: 'app-restaurant-add',\n  templateUrl: './restaurant-add.component.html',\n  styleUrls: ['./restaurant-add.component.css']\n})\nexport class RestaurantAddComponent {\n\n//   restaurant = {\n//     restaurantId: '',\n//     restaurantName: '',\n//     description: '',\n//     location: '',\n//     rating: '',\n//     restaurantImage: '',\n//   };\n// constructor(private route:Router){}\n//   onSubmit() {\n//     // Handle form submission logic here\n//     console.log('Restaurant details submitted:', this.restaurant);\n//     this.route.navigateByUrl(\"/restaurant-list\")\n//   }\nconstructor(private fb:FormBuilder,private service:RestaurantService,private route:Router,\n  private tokenService:TokenInterceptorService){}\n\nrole = this.tokenService.getUserEmail();\n\nuserLoggedIn?:string;\nrestaurants:any=[];\n\naddform = this.fb.group({\n  restaurantId: ['', Validators.required],\n  restaurantName: ['', Validators.required],\n  imageUrl: ['', Validators.required],\n  location: ['', Validators.required],\n  description: ['', Validators.required],\n  rating: ['', Validators.required],\n});\n\n\naddRestaurant(){\n  console.log(this.role)\nif(this.role === \"admin@gmail.com\"){\n  if(this.addform.valid){\n    this.service.registerRestaurant(this.addform.value).subscribe(\n      response=>{\n        alert(`restaurant is added successfully `+response);\n        this.service.updated.emit(true);\n        this.addform.reset();\n        this.route.navigateByUrl(\"/restaurent-list\");\n      },\n      error=>{\n        alert('add all the particulars '+ error);\n      }\n    )\n  }\n}else{\n  alert(\"You are not authorized to add or delete \"+Error);\n\n}\n\n}\n\nupdate(){\n// if(this.addform.valid){\n//     this.service.updateRestaurant(this.addform.value,this.addform.value.restaurantId).subscribe(\n//       response=>{\n//         alert(`restaurant has been updated`);\n//         this.service.updated.emit(true);\n//         this.addform.reset();\n//       },\n//       error=>{\n//         alert(`update is not possible`);\n//       }\n//     )\n//}\n}\n\n// view(){\n// this.route.navigateByUrl('/restaurantView')\n// }\n\n// addItem(){\n// const id=1;\n// this.service.getId(id);\n// this.addform.reset();\n// this.route.navigateByUrl('/adminAddItem');\n// }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAsBC,UAAU,QAAQ,gBAAgB;AAUjD,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAEnC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAoBC,EAAc,EAASC,OAAyB,EAASC,KAAY,EAC/EC,YAAoC;IAD1B,KAAAH,EAAE,GAAFA,EAAE;IAAqB,KAAAC,OAAO,GAAPA,OAAO;IAA2B,KAAAC,KAAK,GAALA,KAAK;IACxE,KAAAC,YAAY,GAAZA,YAAY;IAEtB,KAAAC,IAAI,GAAG,IAAI,CAACD,YAAY,CAACE,YAAY,EAAE;IAGvC,KAAAC,WAAW,GAAK,EAAE;IAElB,KAAAC,OAAO,GAAG,IAAI,CAACP,EAAE,CAACQ,KAAK,CAAC;MACtBC,YAAY,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACa,QAAQ,CAAC;MACvCC,cAAc,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACa,QAAQ,CAAC;MACzCE,QAAQ,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACa,QAAQ,CAAC;MACnCG,QAAQ,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACa,QAAQ,CAAC;MACnCI,WAAW,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACa,QAAQ,CAAC;MACtCK,MAAM,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACa,QAAQ;KACjC,CAAC;EAd8C;EAiBhDM,aAAaA,CAAA;IACXC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,IAAI,CAAC;IACxB,IAAG,IAAI,CAACA,IAAI,KAAK,iBAAiB,EAAC;MACjC,IAAG,IAAI,CAACG,OAAO,CAACY,KAAK,EAAC;QACpB,IAAI,CAAClB,OAAO,CAACmB,kBAAkB,CAAC,IAAI,CAACb,OAAO,CAACc,KAAK,CAAC,CAACC,SAAS,CAC3DC,QAAQ,IAAE;UACRC,KAAK,CAAC,mCAAmC,GAACD,QAAQ,CAAC;UACnD,IAAI,CAACtB,OAAO,CAACwB,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;UAC/B,IAAI,CAACnB,OAAO,CAACoB,KAAK,EAAE;UACpB,IAAI,CAACzB,KAAK,CAAC0B,aAAa,CAAC,kBAAkB,CAAC;QAC9C,CAAC,EACDC,KAAK,IAAE;UACLL,KAAK,CAAC,0BAA0B,GAAEK,KAAK,CAAC;QAC1C,CAAC,CACF;;KAEJ,MAAI;MACHL,KAAK,CAAC,0CAA0C,GAACM,KAAK,CAAC;;EAIzD;EAEAC,MAAMA,CAAA;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;CAcC;AAnFYjC,sBAAsB,GAAAkC,UAAA,EALlCpC,SAAS,CAAC;EACTqC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACWrC,sBAAsB,CAmFlC"},"metadata":{},"sourceType":"module","externalDependencies":[]}