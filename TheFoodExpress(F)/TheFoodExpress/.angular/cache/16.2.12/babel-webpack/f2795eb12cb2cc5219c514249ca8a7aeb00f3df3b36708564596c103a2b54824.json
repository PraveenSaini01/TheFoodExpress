{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction RegistrationComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Email is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Please enter a valid email address. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"span\", 11);\n    i0.ɵɵtext(2, \" should have min 7 letter password, with at least a symbol, upper and lower case letters and a number.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class RegistrationComponent {\n  //userForm: FormGroup;\n  constructor(userService, route) {\n    this.userService = userService;\n    this.route = route;\n    this.userForm = new FormGroup({\n      // firstName: new FormControl('', Validators.required),\n      // lastName: new FormControl('', Validators.required),\n      password: new FormControl('', [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{7,}$/)]),\n      emailId: new FormControl('', [Validators.required, Validators.email])\n      //  role: new FormControl('', Validators.required)\n    });\n  }\n\n  get email() {\n    return this.userForm.get('emailId');\n  }\n  get password() {\n    return this.userForm.get('password');\n  }\n  // get role(){\n  //   return this.userForm.get('role');\n  // }\n  ngOnInit() {}\n  onSubmit() {\n    if (this.userForm.valid) {\n      // Call your service to handle registration\n      console.log(this.userForm.value);\n      this.userService.registerUserData(this.userForm.value).subscribe(response => {\n        console.log('User registration successful:', response);\n        // Optionally, reset the form after successful registration\n        this.userForm.reset();\n        this.route.navigateByUrl(\"\");\n      }, error => {\n        console.error('Error during user registration:', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function RegistrationComponent_Factory(t) {\n    return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistrationComponent,\n    selectors: [[\"app-registration\"]],\n    decls: 20,\n    vars: 6,\n    consts: [[1, \"body-container\"], [\"src\", \"../../assets/images/Anime Food Wallpaper aesthetic HD.jpeg\", \"alt\", \"Food Background Image\", 1, \"food-image\"], [1, \"registration-form\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"emailId\", \"placeholder\", \"Enter your Email\"], [\"id\", \"err\", 4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"Enter your Password\", \"formControlName\", \"password\"], [\"type\", \"submit\", 1, \"registbutton\", 3, \"disabled\"], [\"id\", \"err\"], [\"color\", \"red\"]],\n    template: function RegistrationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"img\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"h2\");\n        i0.ɵɵtext(4, \"Registration\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function RegistrationComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵtemplate(10, RegistrationComponent_div_10_Template, 2, 0, \"div\", 7);\n        i0.ɵɵtemplate(11, RegistrationComponent_div_11_Template, 2, 0, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 4)(13, \"span\");\n        i0.ɵɵtext(14, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵtemplate(16, RegistrationComponent_div_16_Template, 2, 0, \"div\", 7);\n        i0.ɵɵtemplate(17, RegistrationComponent_div_17_Template, 3, 0, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 9);\n        i0.ɵɵtext(19, \"Register\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.userForm.get(\"emailId\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx.userForm.get(\"emailId\")) == null ? null : tmp_1_0.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.userForm.get(\"emailId\")) == null ? null : tmp_2_0.hasError(\"emailId\")) && ((tmp_2_0 = ctx.userForm.get(\"emailId\")) == null ? null : tmp_2_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.password == null ? null : ctx.password.errors == null ? null : ctx.password.errors[\"required\"]) && (ctx.password == null ? null : ctx.password.dirty));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.password == null ? null : ctx.password.errors == null ? null : ctx.password.errors[\"pattern\"]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.userForm.invalid);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"\\n\\n.registration-form[_ngcontent-%COMP%] {\\n  width: 320px;\\n  height:330px;\\n\\nmargin-bottom: 220px;\\nmargin-left: 580px;\\n\\n  box-shadow: 5px 10px 10px rgba(0, 0, 0, 0.2);\\n  background-color:#F1E4C3;\\n  border-radius: 0 10px 10px 0;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 5px;\\n  color: black;\\n  font-weight: bolder;\\n}\\nspan[_ngcontent-%COMP%]{\\n  display: block;\\n  margin-bottom: 5px;\\n  color: black;\\n  font-weight: bolder;\\n}\\n.food-image[_ngcontent-%COMP%] {\\n\\n  width: 320px;\\n  height:330px;\\n    object-fit: cover;\\n    opacity: 0.5;\\n    position: relative;\\n    border-top-left-radius: 10px;\\n    border-bottom-left-radius: 10px;\\nmargin-left: 259px;\\n    box-shadow: 10px 10px 10px rgba(0, 0, 0, 0.2);\\n    margin-top: 70px;\\n    transition: opacity 0.3s ease-in-out;\\n\\n\\n  }\\n\\n  .food-image[_ngcontent-%COMP%]:hover {\\n    opacity: 1;\\n    filter: grayscale(0%);\\n  }\\n\\n\\ninput[_ngcontent-%COMP%] {\\n  width: 250px;\\n  padding: 8px;\\n  margin-bottom: 5px;\\n}\\n\\n.registbutton[_ngcontent-%COMP%] {\\n  font-size: 1rem;\\n\\nmargin-top: -5px;\\nmargin-left:90px;\\n  color: #000000;\\n  background-color: transparent;\\n  text-transform: uppercase;\\n  display: inline-block;\\n  padding: 10px 20px;\\n  font-size: 16px;\\n  font-weight: bolder;\\n  text-align: center;\\n  text-decoration: none;\\n  cursor: pointer;\\n  border: 1px solid #030303;\\n  background-color: #ffffff;\\n  border-radius: 5px;\\n  transition: background-color 0.3s, color 0.3s, border-color 0.3s;\\n}\\n\\n.registbutton[_ngcontent-%COMP%]:hover {\\n  background-color: #F1E4C3;\\n}\\n\\n\\nh2[_ngcontent-%COMP%] {\\n  font-size: 28px;\\n  margin-bottom: 10px;\\n  margin-left: 40px;\\n  text-transform: uppercase;\\n  font-weight: bold;\\n  margin-top: -330px;\\n}\\n\\n@media (max-width: 768px) {\\n  .body-container[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n\\n  .registration-form[_ngcontent-%COMP%] {\\n    width: 100%;\\n    margin-right: 0;\\n    margin-bottom: 20px;\\n  }\\n}\\n\\n#err[_ngcontent-%COMP%]{\\n  color:red\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n  .mat-form-field-appearance-fill .mat-form-field-flex .mat-form-field-infix {\\n  background-color: #25d8f0; \\n\\n}\\n\\n\\n.example-form[_ngcontent-%COMP%] {\\n  width: 300px;\\n  margin: auto;\\n  padding: 20px;\\n}\\n\\n.example-full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n\\nmatInput[_ngcontent-%COMP%]\\n{\\n  background-color: #25d8f0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLCtCQUErQjtBQUMvQjtFQUNFLFlBQVk7RUFDWixZQUFZOztBQUVkLG9CQUFvQjtBQUNwQixrQkFBa0I7O0VBRWhCLDRDQUE0QztFQUM1Qyx3QkFBd0I7RUFPeEIsNEJBQTRCO0FBQzlCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7QUFDQTs7RUFFRSxZQUFZO0VBQ1osWUFBWTtJQUNWLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLDRCQUE0QjtJQUM1QiwrQkFBK0I7QUFDbkMsa0JBQWtCO0lBQ2QsNkNBQTZDO0lBQzdDLGdCQUFnQjtJQUNoQixvQ0FBb0M7OztFQUd0Qzs7RUFFQTtJQUNFLFVBQVU7SUFDVixxQkFBcUI7RUFDdkI7OztBQUdGO0VBQ0UsWUFBWTtFQUNaLFlBQVk7RUFDWixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxlQUFlOztBQUVqQixnQkFBZ0I7QUFDaEIsZ0JBQWdCO0VBQ2QsY0FBYztFQUNkLDZCQUE2QjtFQUM3Qix5QkFBeUI7RUFDekIscUJBQXFCO0VBQ3JCLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixxQkFBcUI7RUFDckIsZUFBZTtFQUNmLHlCQUF5QjtFQUN6Qix5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLGdFQUFnRTtBQUNsRTs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7O0FBR0E7RUFDRSxlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLGlCQUFpQjtFQUNqQix5QkFBeUI7RUFDekIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFO0lBQ0Usc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0UsV0FBVztJQUNYLGVBQWU7SUFDZixtQkFBbUI7RUFDckI7QUFDRjs7QUFFQTtFQUNFO0FBQ0Y7Ozs7OztBQU1BLGVBQWU7O0FBRWYsOENBQThDO0FBQzlDO0VBQ0UseUJBQXlCLEVBQUUsb0NBQW9DO0FBQ2pFO0FBQ0EsK0JBQStCO0FBQy9CO0VBQ0UsWUFBWTtFQUNaLFlBQVk7RUFDWixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7OztBQUdBOztFQUVFLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIHJlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzICovXHJcbi5yZWdpc3RyYXRpb24tZm9ybSB7XHJcbiAgd2lkdGg6IDMyMHB4O1xyXG4gIGhlaWdodDozMzBweDtcclxuXHJcbm1hcmdpbi1ib3R0b206IDIyMHB4O1xyXG5tYXJnaW4tbGVmdDogNTgwcHg7XHJcblxyXG4gIGJveC1zaGFkb3c6IDVweCAxMHB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gIGJhY2tncm91bmQtY29sb3I6I0YxRTRDMztcclxuXHJcbiAgLW8tYm9yZGVyLXJhZGl1czogMCAxMHB4IDEwcHggMDtcclxuXHJcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwIDEwcHggMTBweCAwO1xyXG4gIC1tb3otYm9yZGVyLXJhZGl1czogMCAxMHB4IDEwcHggMDtcclxuICAtbXMtYm9yZGVyLXJhZGl1czogMCAxMHB4IDEwcHggMDtcclxuICBib3JkZXItcmFkaXVzOiAwIDEwcHggMTBweCAwO1xyXG59XHJcblxyXG4uZm9ybS1ncm91cCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxubGFiZWwge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1ib3R0b206IDVweDtcclxuICBjb2xvcjogYmxhY2s7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxufVxyXG5zcGFue1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1ib3R0b206IDVweDtcclxuICBjb2xvcjogYmxhY2s7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxufVxyXG4uZm9vZC1pbWFnZSB7XHJcblxyXG4gIHdpZHRoOiAzMjBweDtcclxuICBoZWlnaHQ6MzMwcHg7XHJcbiAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgIG9wYWNpdHk6IDAuNTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDEwcHg7XHJcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAxMHB4O1xyXG5tYXJnaW4tbGVmdDogMjU5cHg7XHJcbiAgICBib3gtc2hhZG93OiAxMHB4IDEwcHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbiAgICBtYXJnaW4tdG9wOiA3MHB4O1xyXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2UtaW4tb3V0O1xyXG5cclxuXHJcbiAgfVxyXG5cclxuICAuZm9vZC1pbWFnZTpob3ZlciB7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgZmlsdGVyOiBncmF5c2NhbGUoMCUpO1xyXG4gIH1cclxuXHJcblxyXG5pbnB1dCB7XHJcbiAgd2lkdGg6IDI1MHB4O1xyXG4gIHBhZGRpbmc6IDhweDtcclxuICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbn1cclxuXHJcbi5yZWdpc3RidXR0b24ge1xyXG4gIGZvbnQtc2l6ZTogMXJlbTtcclxuXHJcbm1hcmdpbi10b3A6IC01cHg7XHJcbm1hcmdpbi1sZWZ0OjkwcHg7XHJcbiAgY29sb3I6ICMwMDAwMDA7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBmb250LXdlaWdodDogYm9sZGVyO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMzAzMDM7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzLCBjb2xvciAwLjNzLCBib3JkZXItY29sb3IgMC4zcztcclxufVxyXG5cclxuLnJlZ2lzdGJ1dHRvbjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0YxRTRDMztcclxufVxyXG5cclxuXHJcbmgyIHtcclxuICBmb250LXNpemU6IDI4cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICBtYXJnaW4tbGVmdDogNDBweDtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIG1hcmdpbi10b3A6IC0zMzBweDtcclxufVxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgLmJvZHktY29udGFpbmVyIHtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgfVxyXG5cclxuICAucmVnaXN0cmF0aW9uLWZvcm0ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIH1cclxufVxyXG5cclxuI2VycntcclxuICBjb2xvcjpyZWRcclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8qIHN0eWxlcy5jc3MgKi9cclxuXHJcbi8qIEFwcGx5IGJhY2tncm91bmQgY29sb3IgdG8gdGhlIGlucHV0IGJveGVzICovXHJcbjo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1maWxsIC5tYXQtZm9ybS1maWVsZC1mbGV4IC5tYXQtZm9ybS1maWVsZC1pbmZpeCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI1ZDhmMDsgLyogUmVwbGFjZSB3aXRoIHlvdXIgZGVzaXJlZCBjb2xvciAqL1xyXG59XHJcbi8qIHJlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzICovXHJcbi5leGFtcGxlLWZvcm0ge1xyXG4gIHdpZHRoOiAzMDBweDtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgcGFkZGluZzogMjBweDtcclxufVxyXG5cclxuLmV4YW1wbGUtZnVsbC13aWR0aCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcblxyXG5tYXRJbnB1dFxyXG57XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI1ZDhmMDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","RegistrationComponent","constructor","userService","route","userForm","password","required","pattern","emailId","email","get","ngOnInit","onSubmit","valid","console","log","value","registerUserData","subscribe","response","reset","navigateByUrl","error","_","ɵɵdirectiveInject","i1","UserService","i2","Router","_2","selectors","decls","vars","consts","template","RegistrationComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","RegistrationComponent_Template_form_ngSubmit_5_listener","ɵɵtemplate","RegistrationComponent_div_10_Template","RegistrationComponent_div_11_Template","RegistrationComponent_div_16_Template","RegistrationComponent_div_17_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","hasError","touched","tmp_2_0","errors","dirty","invalid"],"sources":["E:\\New folder (2)\\TheFoodExpress\\TheFoodExpress\\src\\app\\registration\\registration.component.ts","E:\\New folder (2)\\TheFoodExpress\\TheFoodExpress\\src\\app\\registration\\registration.component.html"],"sourcesContent":["// registration.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from '../service/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  //userForm: FormGroup;\n\n  constructor(private userService: UserService,private route : Router) {}\n    userForm = new FormGroup({\n      // firstName: new FormControl('', Validators.required),\n      // lastName: new FormControl('', Validators.required),\n      password:new FormControl('', [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{7,}$/)]),\n      emailId: new FormControl('', [Validators.required, Validators.email]),\n    //  role: new FormControl('', Validators.required)\n    });\n  \n  get email(){\n    return this.userForm.get('emailId');\n  }\n\n  get password(){\n    return this.userForm.get('password');\n  }\n  // get role(){\n  //   return this.userForm.get('role');\n  // }\n  ngOnInit(): void {}\n\n  onSubmit(): void {\n    if (this.userForm.valid) {\n      // Call your service to handle registration\n      console.log(this.userForm.value)\n      this.userService.registerUserData(this.userForm.value).subscribe(\n        (response) => {\n          console.log('User registration successful:', response);\n          // Optionally, reset the form after successful registration\n          this.userForm.reset();\n          this. route.navigateByUrl(\"\") ;\n        },\n        (error) => {\n          console.error('Error during user registration:', error);\n        }\n      );\n    }\n  }\n}\n\n\n\n \n\n  \n\n\n  \n    // this.registrationForm = this.fb.group({\n    //   email: ['', [Validators.required, Validators.email]],\n    //     // Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')]],\n    //   password: ['', [Validators.required, Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{8,}$')]],\n    //   role: ['', [Validators.required]],\n    //   address: this.fb.group({\n    //     houseNo: ['', [Validators.required, Validators.pattern('^[0-9]{3}$')]],\n    //     city: ['', [Validators.required, Validators.pattern('[A-Za-z]+')]],\n    //     street: ['', [Validators.required, Validators.pattern('[A-Za-z0-9]+')]],\n    //     postalCode: ['', [Validators.required, Validators.pattern('^\\\\d{6}$')]]\n    //   })\n    // });\n \n  // ngOnInit(): void {\n  // }\n\n    \n  // registerUser() {\n  //   console.log(\"hello\");\n  //   if (this.registrationForm.valid) {\n  //     const userData = {\n  //       ...this.registrationForm.value,\n  //       userEmail: this.registrationForm.get('email')?.value || ''\n  //     };\n\n  //     console.log('User Data:', userData);\n\n  //     this.userService.registerUser(userData).subscribe(\n  //       (response: any) => {\n  //         console.log('User registered successfully', response);\n  //       },\n  //       (error) => {\n  //         console.error('Error during registration:', error);\n  //       }\n  //     );\n  //   }\n  // }\n\n  \n\n\n\n\n\n\n","<div class=\"body-container\">\n\n  <img src=\"../../assets/images/Anime Food Wallpaper aesthetic HD.jpeg\" alt=\"Food Background Image\" class=\"food-image\">\n</div>\n<div class=\"registration-form\">\n\n  <h2>Registration</h2>\n  <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n\n    <div class=\"form-group\">\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" id=\"email\" formControlName=\"emailId\" placeholder=\"Enter your Email\" />\n      <div id=\"err\" *ngIf=\"userForm.get('emailId')?.hasError('required') && userForm.get('emailId')?.touched\">\n        Email is required.\n      </div>\n      <div id=\"err\" *ngIf=\"userForm.get('emailId')?.hasError('emailId') && userForm.get('emailId')?.touched\">\n        Please enter a valid email address.\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <span>Password:</span>\n      <input type=\"password\" placeholder=\"Enter your Password\" formControlName=\"password\">\n      <div id=\"err\" *ngIf=\"password?.errors?.['required'] && password?.dirty\">\n          Password is required\n      </div>\n      <div id=\"err\" *ngIf=\"password?.errors?.['pattern']\">\n          <span color=\"red\"> should have min 7 letter password, with at least a symbol, upper and lower case letters\n              and a number.</span>\n      </div>\n  </div>\n    <!-- <div class=\"form-group\">\n      <label for=\"role\">Role:</label>\n      <input type=\"text\" id=\"role\" formControlName=\"role\" />\n      <div *ngIf=\"userForm.get('role')?.hasError('required') && userForm.get('role')?.touched\">\n        Role is required.\n      </div>\n    </div> -->\n    <button type=\"submit\" class=\"registbutton\" [disabled]=\"userForm.invalid\">Register</button>\n  </form>\n</div>\n\n\n\n\n  <!-- <mat-form-field class=\"example-full-width\">\n    <mat-label>First Name</mat-label>\n    <input matInput placeholder=\"Enter your first name\" required>\n  </mat-form-field>\n\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Last Name</mat-label>\n    <input matInput placeholder=\"Enter your last name\" required>\n  </mat-form-field>\n\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Email</mat-label>\n    <input matInput placeholder=\"Enter your email\" type=\"email\" required>\n  </mat-form-field>\n\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Password</mat-label>\n    <input matInput placeholder=\"Enter your password\" type=\"password\" required>\n  </mat-form-field>\n\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Confirm Password</mat-label>\n    <input matInput placeholder=\"Confirm your password\" type=\"password\" required>\n  </mat-form-field>\n\n  <button mat-raised-button color=\"primary\" type=\"submit\">Register</button> -->\n<!-- </form> -->\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}