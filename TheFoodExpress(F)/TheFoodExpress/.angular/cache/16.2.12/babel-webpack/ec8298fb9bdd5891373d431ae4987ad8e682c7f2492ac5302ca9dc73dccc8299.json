{"ast":null,"code":"// import { HttpClient } from '@angular/common/http';\n// import { Injectable } from '@angular/core';\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nexport let AuthService = class AuthService {\n  constructor(http, afAuth) {\n    this.http = http;\n    this.afAuth = afAuth;\n    this.isAuthenticated = false;\n    this.user$ = this.afAuth.authState;\n  }\n  saveUser(userDetails) {\n    console.log(\"inside auth services\");\n    return this.http.post(`http://localhost:9000/api/v1/save `, userDetails, {\n      observe: 'response',\n      withCredentials: true // withCredentials: true => mean browser can stored data inside the cookies related to thise request\n    });\n  }\n\n  getUserEmail() {\n    return this.afAuth.currentUser ? this.afAuth.currentUser.email : null;\n  }\n  loginUser(user) {\n    this.isAuthenticated = true;\n    return this.http.post(`http://localhost:9000/api/v1/login`, user, {\n      responseType: 'text',\n      withCredentials: true\n    });\n  }\n  logout() {\n    this.isAuthenticated = false;\n  }\n  isAuthenticatedUser() {\n    return this.isAuthenticated;\n  }\n};\nAuthService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthService);","map":{"version":3,"names":["Injectable","AuthService","constructor","http","afAuth","isAuthenticated","user$","authState","saveUser","userDetails","console","log","post","observe","withCredentials","getUserEmail","currentUser","email","loginUser","user","responseType","logout","isAuthenticatedUser","__decorate","providedIn"],"sources":["E:\\New folder (2)\\TheFoodExpress\\TheFoodExpress\\src\\app\\service\\auth.service.ts"],"sourcesContent":["// import { HttpClient } from '@angular/common/http';\n// import { Injectable } from '@angular/core';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class AuthService {\n\n//   constructor(private http:HttpClient) { }\n//   saveUser(userDetails: any) {\n//     console.log(\"inside auth services\")\n//     return this.http.post(`http://localhost:9000/api/v1/save `, userDetails, {\n//       observe: 'response', withCredentials: true  // withCredentials: true => mean browser can stored data inside the cookies related to thise request\n//     });\n//   }\n\n//   loginUser(user: any) {\n//     this.isAuthenticated = true;\n//     return this.http.post(`http://localhost:9000/api/v1/login`, user, { responseType: 'text', withCredentials: true });\n//   }\n//   private isAuthenticated = false;\n\n\n//   logout() {\n//     this.isAuthenticated = false;\n//   }\n\n//   isAuthenticatedUser() {\n//     return this.isAuthenticated;\n//   }\n// }\n\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user$: Observable<firebase.User>;\n  constructor(private http:HttpClient,private afAuth: AngularFireAuth) { this.user$ = this.afAuth.authState; }\n  saveUser(userDetails: any) {\n    console.log(\"inside auth services\")\n    return this.http.post(`http://localhost:9000/api/v1/save `, userDetails, {\n      observe: 'response', withCredentials: true  // withCredentials: true => mean browser can stored data inside the cookies related to thise request\n    });\n  }\n  getUserEmail(): string {\n    return this.afAuth.currentUser ? this.afAuth.currentUser.email : null;\n  }\n  loginUser(user: any) {\n    this.isAuthenticated = true;\n    return this.http.post(`http://localhost:9000/api/v1/login`, user, { responseType: 'text', withCredentials: true });\n  }\n  private isAuthenticated = false;\n\n\n  logout() {\n    this.isAuthenticated = false;\n  }\n\n  isAuthenticatedUser() {\n    return this.isAuthenticated;\n  }\n}\n\n\n\n"],"mappings":"AAAA;AACA;;AAkCA,SAASA,UAAU,QAAQ,eAAe;AAMnC,WAAMC,WAAW,GAAjB,MAAMA,WAAW;EAEtBC,YAAoBC,IAAe,EAASC,MAAuB;IAA/C,KAAAD,IAAI,GAAJA,IAAI;IAAoB,KAAAC,MAAM,GAANA,MAAM;IAc1C,KAAAC,eAAe,GAAG,KAAK;IAdwC,IAAI,CAACC,KAAK,GAAG,IAAI,CAACF,MAAM,CAACG,SAAS;EAAE;EAC3GC,QAAQA,CAACC,WAAgB;IACvBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,oCAAoC,EAAEH,WAAW,EAAE;MACvEI,OAAO,EAAE,UAAU;MAAEC,eAAe,EAAE,IAAI,CAAE;KAC7C,CAAC;EACJ;;EACAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACX,MAAM,CAACY,WAAW,GAAG,IAAI,CAACZ,MAAM,CAACY,WAAW,CAACC,KAAK,GAAG,IAAI;EACvE;EACAC,SAASA,CAACC,IAAS;IACjB,IAAI,CAACd,eAAe,GAAG,IAAI;IAC3B,OAAO,IAAI,CAACF,IAAI,CAACS,IAAI,CAAC,oCAAoC,EAAEO,IAAI,EAAE;MAAEC,YAAY,EAAE,MAAM;MAAEN,eAAe,EAAE;IAAI,CAAE,CAAC;EACpH;EAIAO,MAAMA,CAAA;IACJ,IAAI,CAAChB,eAAe,GAAG,KAAK;EAC9B;EAEAiB,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACjB,eAAe;EAC7B;CACD;AA1BYJ,WAAW,GAAAsB,UAAA,EAHvBvB,UAAU,CAAC;EACVwB,UAAU,EAAE;CACb,CAAC,C,EACWvB,WAAW,CA0BvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}