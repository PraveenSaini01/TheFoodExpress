{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AdminFoodItemComponent = class AdminFoodItemComponent {\n  //   restaurant = {\n  //     restaurantId: '',\n  //     restaurantName: '',\n  //     description: '',\n  //     location: '',\n  //     rating: '',\n  //     restaurantImage: '',\n  //   };\n  // constructor(private route:Router){}\n  //   onSubmit() {\n  //     // Handle form submission logic here\n  //     console.log('Restaurant details submitted:', this.restaurant);\n  //     this.route.navigateByUrl(\"/restaurant-list\")\n  //   }\n  constructor(fb, service, route, tokenService) {\n    this.fb = fb;\n    this.service = service;\n    this.route = route;\n    this.tokenService = tokenService;\n    this.role = this.tokenService.getUserEmail();\n    this.restaurants = [];\n    this.addform = this.fb.group({\n      restaurantId: ['', Validators.required],\n      restaurantName: ['', Validators.required],\n      imageUrl: ['', Validators.required],\n      location: ['', Validators.required],\n      description: ['', Validators.required],\n      rating: ['', Validators.required]\n    });\n  }\n  addfoodItem() {\n    console.log(this.role);\n    if (this.role === \"admin@gmail.com\") {\n      if (this.addform.valid) {\n        this.service.registerRestaurant(this.addform.value).subscribe(response => {\n          alert(`restaurant is added successfully ` + response);\n          this.service.updated.emit(true);\n          this.addform.reset();\n          this.route.navigateByUrl(\"/restaurent-list\");\n        }, error => {\n          alert('add all the particulars ' + error);\n        });\n      }\n    } else {\n      alert(\"You are not authorized to add or delete \" + Error);\n    }\n  }\n  update() {\n    // if(this.addform.valid){\n    //     this.service.updateRestaurant(this.addform.value,this.addform.value.restaurantId).subscribe(\n    //       response=>{\n    //         alert(`restaurant has been updated`);\n    //         this.service.updated.emit(true);\n    //         this.addform.reset();\n    //       },\n    //       error=>{\n    //         alert(`update is not possible`);\n    //       }\n    //     )\n    //}\n  }\n};\nAdminFoodItemComponent = __decorate([Component({\n  selector: 'app-admin-food-item',\n  templateUrl: './admin-food-item.component.html',\n  styleUrls: ['./admin-food-item.component.css']\n})], AdminFoodItemComponent);","map":{"version":3,"names":["Component","AdminFoodItemComponent","constructor","fb","service","route","tokenService","role","getUserEmail","restaurants","addform","group","restaurantId","Validators","required","restaurantName","imageUrl","location","description","rating","addfoodItem","console","log","valid","registerRestaurant","value","subscribe","response","alert","updated","emit","reset","navigateByUrl","error","Error","update","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\New folder (2)\\TheFoodExpress\\TheFoodExpress\\src\\app\\admin-food-item\\admin-food-item.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-admin-food-item',\n  templateUrl: './admin-food-item.component.html',\n  styleUrls: ['./admin-food-item.component.css']\n})\nexport class AdminFoodItemComponent{\n\n  //   restaurant = {\n  //     restaurantId: '',\n  //     restaurantName: '',\n  //     description: '',\n  //     location: '',\n  //     rating: '',\n  //     restaurantImage: '',\n  //   };\n  // constructor(private route:Router){}\n  //   onSubmit() {\n  //     // Handle form submission logic here\n  //     console.log('Restaurant details submitted:', this.restaurant);\n  //     this.route.navigateByUrl(\"/restaurant-list\")\n  //   }\n  constructor(private fb:FormBuilder,private service:RestaurantService,private route:Router,\n    private tokenService:TokenInterceptorService){}\n\n  role = this.tokenService.getUserEmail();\n\n  userLoggedIn?:string;\n  restaurants:any=[];\n\n  addform = this.fb.group({\n    restaurantId: ['', Validators.required],\n    restaurantName: ['', Validators.required],\n    imageUrl: ['', Validators.required],\n    location: ['', Validators.required],\n    description: ['', Validators.required],\n    rating: ['', Validators.required],\n  });\n\n\n  addfoodItem(){\n    console.log(this.role)\n  if(this.role === \"admin@gmail.com\"){\n    if(this.addform.valid){\n      this.service.registerRestaurant(this.addform.value).subscribe(\n        response=>{\n          alert(`restaurant is added successfully `+response);\n          this.service.updated.emit(true);\n          this.addform.reset();\n          this.route.navigateByUrl(\"/restaurent-list\");\n        },\n        error=>{\n          alert('add all the particulars '+ error);\n        }\n      )\n    }\n  }else{\n    alert(\"You are not authorized to add or delete \"+Error);\n\n  }\n\n  }\n\n  update(){\n  // if(this.addform.valid){\n  //     this.service.updateRestaurant(this.addform.value,this.addform.value.restaurantId).subscribe(\n  //       response=>{\n  //         alert(`restaurant has been updated`);\n  //         this.service.updated.emit(true);\n  //         this.addform.reset();\n  //       },\n  //       error=>{\n  //         alert(`update is not possible`);\n  //       }\n  //     )\n  //}\n  }\n\n  // view(){\n  // this.route.navigateByUrl('/restaurantView')\n  // }\n\n  // addItem(){\n  // const id=1;\n  // this.service.getId(id);\n  // this.addform.reset();\n  // this.route.navigateByUrl('/adminAddItem');\n  // }\n\n  }\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAEjC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAoBC,EAAc,EAASC,OAAyB,EAASC,KAAY,EAC/EC,YAAoC;IAD1B,KAAAH,EAAE,GAAFA,EAAE;IAAqB,KAAAC,OAAO,GAAPA,OAAO;IAA2B,KAAAC,KAAK,GAALA,KAAK;IACxE,KAAAC,YAAY,GAAZA,YAAY;IAEtB,KAAAC,IAAI,GAAG,IAAI,CAACD,YAAY,CAACE,YAAY,EAAE;IAGvC,KAAAC,WAAW,GAAK,EAAE;IAElB,KAAAC,OAAO,GAAG,IAAI,CAACP,EAAE,CAACQ,KAAK,CAAC;MACtBC,YAAY,EAAE,CAAC,EAAE,EAAEC,UAAU,CAACC,QAAQ,CAAC;MACvCC,cAAc,EAAE,CAAC,EAAE,EAAEF,UAAU,CAACC,QAAQ,CAAC;MACzCE,QAAQ,EAAE,CAAC,EAAE,EAAEH,UAAU,CAACC,QAAQ,CAAC;MACnCG,QAAQ,EAAE,CAAC,EAAE,EAAEJ,UAAU,CAACC,QAAQ,CAAC;MACnCI,WAAW,EAAE,CAAC,EAAE,EAAEL,UAAU,CAACC,QAAQ,CAAC;MACtCK,MAAM,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACC,QAAQ;KACjC,CAAC;EAd8C;EAiBhDM,WAAWA,CAAA;IACTC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,IAAI,CAAC;IACxB,IAAG,IAAI,CAACA,IAAI,KAAK,iBAAiB,EAAC;MACjC,IAAG,IAAI,CAACG,OAAO,CAACa,KAAK,EAAC;QACpB,IAAI,CAACnB,OAAO,CAACoB,kBAAkB,CAAC,IAAI,CAACd,OAAO,CAACe,KAAK,CAAC,CAACC,SAAS,CAC3DC,QAAQ,IAAE;UACRC,KAAK,CAAC,mCAAmC,GAACD,QAAQ,CAAC;UACnD,IAAI,CAACvB,OAAO,CAACyB,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;UAC/B,IAAI,CAACpB,OAAO,CAACqB,KAAK,EAAE;UACpB,IAAI,CAAC1B,KAAK,CAAC2B,aAAa,CAAC,kBAAkB,CAAC;QAC9C,CAAC,EACDC,KAAK,IAAE;UACLL,KAAK,CAAC,0BAA0B,GAAEK,KAAK,CAAC;QAC1C,CAAC,CACF;;KAEJ,MAAI;MACHL,KAAK,CAAC,0CAA0C,GAACM,KAAK,CAAC;;EAIzD;EAEAC,MAAMA,CAAA;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;CAcC;AAnFUlC,sBAAsB,GAAAmC,UAAA,EALlCpC,SAAS,CAAC;EACTqC,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWtC,sBAAsB,CAmFhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}