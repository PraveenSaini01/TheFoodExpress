{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/restaurant.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../food-card/food-card.component\";\nfunction FoodListComponent_app_food_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-food-card\", 1);\n  }\n  if (rf & 2) {\n    const food_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"food\", food_r1);\n  }\n}\nexport class FoodListComponent {\n  constructor(restaurantService, route) {\n    this.restaurantService = restaurantService;\n    this.route = route;\n    this.restaurantId = '';\n    this.foods = [];\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.restaurantId = params.get('restaurantId');\n      if (this.restaurantId) {\n        this.getFoodsForRestaurantId(this.restaurantId);\n      }\n    });\n  }\n  getFoodsForRestaurantId(restaurantId) {\n    this.restaurantService.getFoodsForRestaurantId(restaurantId).subscribe(data => {\n      this.foods = data;\n    }, error => {\n      console.error('Error fetching foods:', error);\n      alert('Error fetching foods. Please try again later.');\n    });\n  }\n  static #_ = this.ɵfac = function FoodListComponent_Factory(t) {\n    return new (t || FoodListComponent)(i0.ɵɵdirectiveInject(i1.RestaurantService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FoodListComponent,\n    selectors: [[\"app-food-list\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[3, \"food\", 4, \"ngFor\", \"ngForOf\"], [3, \"food\"]],\n    template: function FoodListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\");\n        i0.ɵɵtemplate(1, FoodListComponent_app_food_card_1_Template, 1, 1, \"app-food-card\", 0);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.foods);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.FoodCardComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","food_r1","FoodListComponent","constructor","restaurantService","route","restaurantId","foods","ngOnInit","paramMap","subscribe","params","get","getFoodsForRestaurantId","data","error","console","alert","_","ɵɵdirectiveInject","i1","RestaurantService","i2","ActivatedRoute","_2","selectors","decls","vars","consts","template","FoodListComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtemplate","FoodListComponent_app_food_card_1_Template","ɵɵelementEnd","ɵɵadvance"],"sources":["E:\\New folder (2)\\TheFoodExpress\\TheFoodExpress\\src\\app\\food-list\\food-list.component.ts","E:\\New folder (2)\\TheFoodExpress\\TheFoodExpress\\src\\app\\food-list\\food-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Food } from '../model/food';\nimport { RestaurantService } from '../service/restaurant.service';\n\n@Component({\n  selector: 'app-food-list',\n  templateUrl: './food-list.component.html',\n  styleUrls: ['./food-list.component.css']\n})\nexport class FoodListComponent implements OnInit {\n  restaurantId: string = '';\n  foods: Food[] = [];\n\n  constructor(private restaurantService: RestaurantService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      this.restaurantId = params.get('restaurantId');\n      if (this.restaurantId) {\n        this.getFoodsForRestaurantId(this.restaurantId);\n      }\n    });\n  }\n\n  getFoodsForRestaurantId(restaurantId: string): void {\n    this.restaurantService.getFoodsForRestaurantId(restaurantId).subscribe(\n      (data: Food[]) => {\n        this.foods = data;\n      },\n      (error: any) => {\n        console.error('Error fetching foods:', error);\n        alert('Error fetching foods. Please try again later.');\n      }\n    );\n  }\n}\n","<section>\n  <app-food-card *ngFor=\"let food of foods\" [food]=\"food\" ></app-food-card>\n</section>\n"],"mappings":";;;;;;;ICCEA,EAAA,CAAAC,SAAA,uBAAyE;;;;IAA/BD,EAAA,CAAAE,UAAA,SAAAC,OAAA,CAAa;;;ADSzD,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,iBAAoC,EAAUC,KAAqB;IAAnE,KAAAD,iBAAiB,GAAjBA,iBAAiB;IAA6B,KAAAC,KAAK,GAALA,KAAK;IAHvE,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,KAAK,GAAW,EAAE;EAEyE;EAE3FC,QAAQA,CAAA;IACN,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAG;MACrC,IAAI,CAACL,YAAY,GAAGK,MAAM,CAACC,GAAG,CAAC,cAAc,CAAC;MAC9C,IAAI,IAAI,CAACN,YAAY,EAAE;QACrB,IAAI,CAACO,uBAAuB,CAAC,IAAI,CAACP,YAAY,CAAC;;IAEnD,CAAC,CAAC;EACJ;EAEAO,uBAAuBA,CAACP,YAAoB;IAC1C,IAAI,CAACF,iBAAiB,CAACS,uBAAuB,CAACP,YAAY,CAAC,CAACI,SAAS,CACnEI,IAAY,IAAI;MACf,IAAI,CAACP,KAAK,GAAGO,IAAI;IACnB,CAAC,EACAC,KAAU,IAAI;MACbC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CE,KAAK,CAAC,+CAA+C,CAAC;IACxD,CAAC,CACF;EACH;EAAC,QAAAC,CAAA,G;qBAzBUhB,iBAAiB,EAAAJ,EAAA,CAAAqB,iBAAA,CAAAC,EAAA,CAAAC,iBAAA,GAAAvB,EAAA,CAAAqB,iBAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBtB,iBAAiB;IAAAuB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV9BjC,EAAA,CAAAmC,cAAA,cAAS;QACPnC,EAAA,CAAAoC,UAAA,IAAAC,0CAAA,2BAAyE;QAC3ErC,EAAA,CAAAsC,YAAA,EAAU;;;QADwBtC,EAAA,CAAAuC,SAAA,GAAQ;QAARvC,EAAA,CAAAE,UAAA,YAAAgC,GAAA,CAAAzB,KAAA,CAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}