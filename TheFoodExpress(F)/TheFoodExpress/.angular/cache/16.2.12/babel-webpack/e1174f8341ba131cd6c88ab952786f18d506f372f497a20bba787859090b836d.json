{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../service/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"../service/token-interceptor.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/form-field\";\nfunction LoginComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Email ID is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Enter a valid email ID\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password must contain at least one uppercase letter, one lowercase letter, one digit, and one special character. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder, authService, route, _sanckBar, tokenService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.route = route;\n    this._sanckBar = _sanckBar;\n    this.tokenService = tokenService;\n  }\n  ngOnInit() {\n    this.initLoginForm();\n  }\n  initLoginForm() {\n    this.loginForm = this.formBuilder.group({\n      emailId: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)]],\n      password: ['', [Validators.required, Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]]\n    });\n  }\n  loginUser() {\n    if (this.loginForm.valid) {\n      const userData = {\n        emailId: this.loginForm.value.emailId,\n        password: this.loginForm.value.password\n      };\n      this.authService.loginUser(userData).subscribe({\n        next: response => {\n          console.log(response);\n          if (response) {\n            localStorage.setItem('token', response);\n            const email = this.tokenService.getUserEmail();\n            console.log(email);\n            if (email === 'admin@gmail.com') {\n              console.log('if');\n              this.authService.setUserEmail(email);\n              this.route.navigateByUrl('/admin');\n            } else {\n              console.log('else');\n              this.authService.setUserEmail(email);\n              this.route.navigateByUrl('/restaurant-list');\n            }\n            this._sanckBar.open('Logged In successfully.....', 'success', {\n              duration: 3000,\n              panelClass: ['mat-toolbar', 'mat-primary']\n            });\n          }\n        },\n        error: err => {\n          console.error('Error during login:', err);\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MatSnackBar), i0.ɵɵdirectiveInject(i5.TokenInterceptorService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 20,\n    vars: 6,\n    consts: [[1, \"body-container\"], [\"src\", \"../../assets/images/20 Awesome Food Photography Blogs to Follow in 2023 (1).jpeg\", \"alt\", \"Food Background Image\", 1, \"food-image\"], [\"id\", \"login-form\"], [1, \"loginform\", 3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"emailId\", \"placeholder\", \"Email\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"type\", \"password\", \"pattern\", \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{8,}$\", \"placeholder\", \"Password\", \"required\", \"\"], [\"type\", \"submit\", 1, \"loginBtn\", 3, \"disabled\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"img\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"section\", 2)(3, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.loginUser();\n        });\n        i0.ɵɵelementStart(4, \"h2\");\n        i0.ɵɵtext(5, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-form-field\", 4)(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵtemplate(10, LoginComponent_mat_error_10_Template, 2, 0, \"mat-error\", 6);\n        i0.ɵɵtemplate(11, LoginComponent_mat_error_11_Template, 2, 0, \"mat-error\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-form-field\", 4)(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 7);\n        i0.ɵɵtemplate(16, LoginComponent_mat_error_16_Template, 2, 0, \"mat-error\", 6);\n        i0.ɵɵtemplate(17, LoginComponent_mat_error_17_Template, 2, 0, \"mat-error\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 8);\n        i0.ɵɵtext(19, \"Login\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.loginForm.get(\"emailId\")) == null ? null : tmp_1_0.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.loginForm.get(\"emailId\")) == null ? null : tmp_2_0.hasError(\"pattern\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.hasError(\"pattern\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      }\n    },\n    dependencies: [i6.NgIf, i7.MatInput, i8.MatFormField, i8.MatLabel, i8.MatError, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.PatternValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"*[_ngcontent-%COMP%] {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n\\n}\\n\\n\\n.body-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding-top: 50px;\\n  background-color: #995c00;\\n\\n}\\n\\n.food-image[_ngcontent-%COMP%] {\\n  width: 350px;\\n  height: 405px;\\n  object-fit: cover;\\n  opacity: 0.5;\\n  border-top-left-radius: 10px;\\n  border-bottom-left-radius: 10px;\\n  margin-left: 257px;\\n  box-shadow: 10px 10px 10px rgba(0, 0, 0, 0.2);\\n  margin-bottom: 120px;\\n  transition:2.5s ;\\n  -webkit-transition:2.5s ;\\n  -moz-transition:2.5s ;\\n  -ms-transition:2.5s ;\\n  -o-transition:2.5s ;\\n}\\n.food-image[_ngcontent-%COMP%]:hover {\\n  opacity: 1;\\n  filter: grayscale(0%);\\n  margin-left: 620px;\\n\\n\\n}\\n\\n#login-form[_ngcontent-%COMP%] {\\n  width: 350px;\\n  height: 405px;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 40px;\\n  box-shadow: 10px 15px 20px rgba(0, 0, 0, 0.2);\\n  display: flex;\\n  -o-border-radius: 0 10px 10px 0;\\n  float: right;\\n  background-color:#fff;\\n  border-radius: 10px;\\n  margin-top: -525px;\\n  overflow: hidden;\\n  border-radius: 0 10px 10px 0;\\n  margin-right: 257px;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  font-size: 28px;\\n  margin-bottom: 20px;\\n  margin-left: 100px;\\n  font-weight: bolder;\\n}\\n\\nmat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-bottom: 20px;\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n.loginBtn[_ngcontent-%COMP%] {\\n  margin-left: 100px;\\n  font-size: rem;\\n  font-weight: bold;\\n  margin-top: -30px;\\n  color: black;\\nbackground-color: transparent;\\n  text-transform: uppercase;\\n\\n top: -220px;\\n\\n display: inline-block;\\n  padding: 10px 20px;\\n  font-size: 16px;\\n  font-weight: bolder;\\n  text-align: center;\\n  text-decoration: none;\\n  cursor: pointer;\\n  border: 1px solid #030303;\\n\\n  background-color: #ffffff;\\n  border-radius: 5px;\\n  transition: background-color 0.3s, color 0.3s, border-color 0.3s;\\n}\\n.loginBtn[_ngcontent-%COMP%]:hover{\\n  background-color:#FFB200;;\\n}\\n\\n\\n\\n@media (max-width: 768px) {\\n  .body-container[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    padding-top: 0;\\n  }\\n}\\n.home[_ngcontent-%COMP%]{\\n  margin-left: 85%;\\n display: flex;\\n justify-content: space-between;\\n color: white;\\n margin-top: -42px;\\n cursor: pointer;\\n}\\n\\ninput[_ngcontent-%COMP%]{\\n  height: 25px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSxTQUFTO0VBQ1QsVUFBVTtFQUNWLHNCQUFzQjtFQUN0QixrQ0FBa0M7O0FBRXBDOzs7QUFHQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsOEJBQThCO0VBQzlCLGlCQUFpQjtFQUNqQix5QkFBeUI7O0FBRTNCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYixpQkFBaUI7RUFDakIsWUFBWTtFQUNaLDRCQUE0QjtFQUM1QiwrQkFBK0I7RUFDL0Isa0JBQWtCO0VBQ2xCLDZDQUE2QztFQUM3QyxvQkFBb0I7RUFDcEIsZ0JBQWdCO0VBQ2hCLHdCQUF3QjtFQUN4QixxQkFBcUI7RUFDckIsb0JBQW9CO0VBQ3BCLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsVUFBVTtFQUNWLHFCQUFxQjtFQUNyQixrQkFBa0I7OztBQUdwQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLDZDQUE2QztFQUM3QyxhQUFhO0VBQ2IsK0JBQStCO0VBQy9CLFlBQVk7RUFDWixxQkFBcUI7RUFDckIsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFJaEIsNEJBQTRCO0VBQzVCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxtQkFBbUI7QUFDckI7Ozs7Ozs7OztBQVNBO0VBQ0Usa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsaUJBQWlCO0VBQ2pCLFlBQVk7QUFDZCw2QkFBNkI7RUFDM0IseUJBQXlCOztDQUUxQixXQUFXOztDQUVYLHFCQUFxQjtFQUNwQixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0VBQ3JCLGVBQWU7RUFDZix5QkFBeUI7O0VBRXpCLHlCQUF5QjtFQUN6QixrQkFBa0I7RUFDbEIsZ0VBQWdFO0FBQ2xFO0FBQ0E7RUFDRSx3QkFBd0I7QUFDMUI7Ozs7QUFJQTtFQUNFO0lBQ0Usc0JBQXNCO0lBQ3RCLGNBQWM7RUFDaEI7QUFDRjtBQUNBO0VBQ0UsZ0JBQWdCO0NBQ2pCLGFBQWE7Q0FDYiw4QkFBOEI7Q0FDOUIsWUFBWTtDQUNaLGlCQUFpQjtDQUNqQixlQUFlO0FBQ2hCOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbioge1xyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgZm9udC1mYW1pbHk6IFwiUG9wcGluc1wiLCBzYW5zLXNlcmlmO1xyXG5cclxufVxyXG5cclxuXHJcbi5ib2R5LWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICBwYWRkaW5nLXRvcDogNTBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk1YzAwO1xyXG5cclxufVxyXG5cclxuLmZvb2QtaW1hZ2Uge1xyXG4gIHdpZHRoOiAzNTBweDtcclxuICBoZWlnaHQ6IDQwNXB4O1xyXG4gIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gIG9wYWNpdHk6IDAuNTtcclxuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxMHB4O1xyXG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDEwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDI1N3B4O1xyXG4gIGJveC1zaGFkb3c6IDEwcHggMTBweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICBtYXJnaW4tYm90dG9tOiAxMjBweDtcclxuICB0cmFuc2l0aW9uOjIuNXMgO1xyXG4gIC13ZWJraXQtdHJhbnNpdGlvbjoyLjVzIDtcclxuICAtbW96LXRyYW5zaXRpb246Mi41cyA7XHJcbiAgLW1zLXRyYW5zaXRpb246Mi41cyA7XHJcbiAgLW8tdHJhbnNpdGlvbjoyLjVzIDtcclxufVxyXG4uZm9vZC1pbWFnZTpob3ZlciB7XHJcbiAgb3BhY2l0eTogMTtcclxuICBmaWx0ZXI6IGdyYXlzY2FsZSgwJSk7XHJcbiAgbWFyZ2luLWxlZnQ6IDYyMHB4O1xyXG5cclxuXHJcbn1cclxuXHJcbiNsb2dpbi1mb3JtIHtcclxuICB3aWR0aDogMzUwcHg7XHJcbiAgaGVpZ2h0OiA0MDVweDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogNDBweDtcclxuICBib3gtc2hhZG93OiAxMHB4IDE1cHggMjBweCByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICAtby1ib3JkZXItcmFkaXVzOiAwIDEwcHggMTBweCAwO1xyXG4gIGZsb2F0OiByaWdodDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBtYXJnaW4tdG9wOiAtNTI1cHg7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDAgMTBweCAxMHB4IDA7XHJcbiAgLW1vei1ib3JkZXItcmFkaXVzOiAwIDEwcHggMTBweCAwO1xyXG4gIC1tcy1ib3JkZXItcmFkaXVzOiAwIDEwcHggMTBweCAwO1xyXG4gIGJvcmRlci1yYWRpdXM6IDAgMTBweCAxMHB4IDA7XHJcbiAgbWFyZ2luLXJpZ2h0OiAyNTdweDtcclxufVxyXG5cclxuaDIge1xyXG4gIGZvbnQtc2l6ZTogMjhweDtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAxMDBweDtcclxuICBmb250LXdlaWdodDogYm9sZGVyO1xyXG59XHJcblxyXG5tYXQtZm9ybS1maWVsZCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbi5sb2dpbkJ0biB7XHJcbiAgbWFyZ2luLWxlZnQ6IDEwMHB4O1xyXG4gIGZvbnQtc2l6ZTogcmVtO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIG1hcmdpbi10b3A6IC0zMHB4O1xyXG4gIGNvbG9yOiBibGFjaztcclxuYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuXHJcbiB0b3A6IC0yMjBweDtcclxuXHJcbiBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBmb250LXdlaWdodDogYm9sZGVyO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMzAzMDM7XHJcblxyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcywgY29sb3IgMC4zcywgYm9yZGVyLWNvbG9yIDAuM3M7XHJcbn1cclxuLmxvZ2luQnRuOmhvdmVye1xyXG4gIGJhY2tncm91bmQtY29sb3I6I0ZGQjIwMDs7XHJcbn1cclxuXHJcblxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgLmJvZHktY29udGFpbmVyIHtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBwYWRkaW5nLXRvcDogMDtcclxuICB9XHJcbn1cclxuLmhvbWV7XHJcbiAgbWFyZ2luLWxlZnQ6IDg1JTtcclxuIGRpc3BsYXk6IGZsZXg7XHJcbiBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiBjb2xvcjogd2hpdGU7XHJcbiBtYXJnaW4tdG9wOiAtNDJweDtcclxuIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuaW5wdXR7XHJcbiAgaGVpZ2h0OiAyNXB4O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","formBuilder","authService","route","_sanckBar","tokenService","ngOnInit","initLoginForm","loginForm","group","emailId","required","pattern","password","loginUser","valid","userData","value","subscribe","next","response","console","log","localStorage","setItem","email","getUserEmail","setUserEmail","navigateByUrl","open","duration","panelClass","error","err","_","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","i4","MatSnackBar","i5","TokenInterceptorService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵtemplate","LoginComponent_mat_error_10_Template","LoginComponent_mat_error_11_Template","LoginComponent_mat_error_16_Template","LoginComponent_mat_error_17_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","get","hasError","tmp_2_0","tmp_3_0","tmp_4_0"],"sources":["E:\\New folder (2)\\TheFoodExpress\\TheFoodExpress\\src\\app\\login\\login.component.ts","E:\\New folder (2)\\TheFoodExpress\\TheFoodExpress\\src\\app\\login\\login.component.html"],"sourcesContent":["// import { Component, OnInit } from '@angular/core';\n// import { FormBuilder, FormGroup, Validators } from '@angular/forms';\n// import { AuthService } from '../service/auth.service';\n// import { Route, Router } from '@angular/router';\n// import { MatSnackBar } from '@angular/material/snack-bar';\n// import { TokenInterceptorService } from '../service/token-interceptor.service';\n// import { SessionLogService } from '../service/sessionlog.service';\n\n// @Component({\n//   selector: 'app-login',\n//   templateUrl: './login.component.html',\n//   styleUrls: ['./login.component.css'],\n// })\n// export class LoginComponent implements OnInit {\n//   [x: string]: any;\n\n//   loginForm!: FormGroup;\n//   //isLoggedIn: boolean=false;\n\n//   responseData:any;\n//   userRole:any;\n\n//   constructor(private formBuilder: FormBuilder,private authService:AuthService,\n//     private route:Router,private _sanckBar:MatSnackBar,private tokenService:TokenInterceptorService\n//    ) {}\n\n//   ngOnInit(): void {\n//     this.initLoginForm();\n//   }\n\n//   initLoginForm(): void {\n//     this.loginForm = this.formBuilder.group({\n//       emailId: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)]],\n//       password: ['', [Validators.required, Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]],\n\n//     });\n//   }\n\n\n//   loginUser(): void {\n//     if (this.loginForm.valid) {\n\n//         // Call your service to handle registration\n//         console.log(this.loginForm.value)\n//         const userData={\n//           emailId:this.loginForm.value.emailId,\n//           password:this.loginForm.value.password\n//         }\n//         this.authService.loginUser(userData).subscribe({\n//          next:response => {\n//             console.log(response)\n//            if(response){\n//             localStorage.setItem('token',response);\n\n//             const email = this.tokenService.getUserEmail();\n//             console.log(email);\n\n//             if(email===\"admin@gmail.com\" ){\n//               console.log(\"if\");\n//               this.route.navigateByUrl('/admin');\n//               this.authService.isAuthenticatedUser();\n\n//             }else{\n//               console.log(\"else\");\n//               this.authService.isAuthenticatedUser();\n//             this.route.navigateByUrl(\"/restaurent-list\");\n//             }\n\n//             this._sanckBar.open('Logged In successfully.....', 'success', {\n//               duration: 3000,\n//               panelClass: ['mat-toolbar', 'mat-primary']\n//             });\n//           }},\n//           error:(err) => {\n//             console.error('Error during login:', err);\n//           }\n//     });\n//       }\n//   }\n\n// }\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../service/auth.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TokenInterceptorService } from '../service/token-interceptor.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private route: Router,\n    private _sanckBar: MatSnackBar,\n    private tokenService: TokenInterceptorService\n  ) {}\n\n  ngOnInit(): void {\n    this.initLoginForm();\n  }\n\n  initLoginForm(): void {\n    this.loginForm = this.formBuilder.group({\n      emailId: [\n        '',\n        [Validators.required, Validators.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)],\n      ],\n      password: [\n        '',\n        [Validators.required, Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)],\n      ],\n    });\n  }\n\n  loginUser(): void {\n    if (this.loginForm.valid) {\n      const userData = {\n        emailId: this.loginForm.value.emailId,\n        password: this.loginForm.value.password,\n      };\n\n      this.authService.loginUser(userData).subscribe({\n        next: (response) => {\n          console.log(response);\n          if (response) {\n            localStorage.setItem('token', response);\n\n            const email = this.tokenService.getUserEmail();\n            console.log(email);\n\n            if (email === 'admin@gmail.com') {\n              console.log('if');\n              this.authService.setUserEmail(email);\n              this.route.navigateByUrl('/admin');\n            } else {\n              console.log('else');\n              this.authService.setUserEmail(email);\n              this.route.navigateByUrl('/restaurant-list');\n            }\n\n            this._sanckBar.open('Logged In successfully.....', 'success', {\n              duration: 3000,\n              panelClass: ['mat-toolbar', 'mat-primary'],\n            });\n          }\n        },\n        error: (err) => {\n          console.error('Error during login:', err);\n        },\n      });\n    }\n  }\n}\n","<div class=\"body-container\">\n\n  <img src=\"../../assets/images/20 Awesome Food Photography Blogs to Follow in 2023 (1).jpeg\" alt=\"Food Background Image\" class=\"food-image\">\n</div>\n  <section id=\"login-form\">\n    <form class=\"loginform\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n\n      <h2>Login</h2>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Email</mat-label>\n        <input matInput type=\"email\" formControlName=\"emailId\"  placeholder=\"Email\" required>\n        <mat-error *ngIf=\"loginForm.get('emailId')?.hasError('required')\">Email ID is required</mat-error>\n        <mat-error *ngIf=\"loginForm.get('emailId')?.hasError('pattern')\">Enter a valid email ID</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Password</mat-label>\n        <input matInput formControlName=\"password\" type=\"password\" pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$\" placeholder=\"Password\" required>\n        <mat-error *ngIf=\"loginForm.get('password')?.hasError('required')\">Password is required</mat-error>\n        <mat-error *ngIf=\"loginForm.get('password')?.hasError('pattern')\">\n          Password must contain at least one uppercase letter, one lowercase letter, one digit, and one special character.\n        </mat-error>\n      </mat-form-field>\n\n\n\n      <button  class=\"loginBtn\" type=\"submit\" [disabled]=\"!loginForm.valid\" >Login</button>\n    </form>\n  </section>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}