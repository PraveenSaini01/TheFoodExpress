{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.isAuthenticated = false;\n    this.userEmail = null;\n  }\n  saveUser(userDetails) {\n    console.log(\"inside auth services\");\n    return this.http.post(`http://localhost:9000/api/v1/save `, userDetails, {\n      observe: 'response',\n      withCredentials: true // withCredentials: true => mean browser can stored data inside the cookies related to thise request\n    });\n  }\n\n  login(user) {\n    return this.http.post(`http://localhost:9000/api/v1/login`, user).pipe(\n    // Assuming your API returns user data with an email field\n    map(response => {\n      this.isAuthenticated = true;\n      this.userEmail = response.email;\n      return response;\n    }));\n  }\n  logout() {\n    this.isAuthenticated = false;\n    this.userEmail = null;\n  }\n  isAuthenticatedUser() {\n    return this.isAuthenticated;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","AuthService","constructor","http","isAuthenticated","userEmail","saveUser","userDetails","console","log","post","observe","withCredentials","login","user","pipe","response","email","logout","isAuthenticatedUser","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\New folder (2)\\TheFoodExpress\\TheFoodExpress\\src\\app\\service\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, map } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private isAuthenticated = false;\n  private userEmail: string | null = null;\n\n  constructor(private http:HttpClient) { }\n  saveUser(userDetails: any) {\n    console.log(\"inside auth services\")\n    return this.http.post(`http://localhost:9000/api/v1/save `, userDetails, {\n      observe: 'response', withCredentials: true  // withCredentials: true => mean browser can stored data inside the cookies related to thise request\n    });\n  }\n\n\n  login(user: any): Observable<any> {\n    return this.http.post<any>(`http://localhost:9000/api/v1/login`, user)\n      .pipe(\n        // Assuming your API returns user data with an email field\n        map(response => {\n          this.isAuthenticated = true;\n          this.userEmail = response.email;\n          return response;\n        })\n      );\n  }\n  logout(): void {\n    this.isAuthenticated = false;\n    this.userEmail = null;\n  }\n\n  isAuthenticatedUser() {\n    return this.isAuthenticated;\n  }\n}\n\n\n\n"],"mappings":"AAEA,SAAqBA,GAAG,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,eAAe,GAAG,KAAK;IACvB,KAAAC,SAAS,GAAkB,IAAI;EAEA;EACvCC,QAAQA,CAACC,WAAgB;IACvBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,oCAAoC,EAAEH,WAAW,EAAE;MACvEI,OAAO,EAAE,UAAU;MAAEC,eAAe,EAAE,IAAI,CAAE;KAC7C,CAAC;EACJ;;EAGAC,KAAKA,CAACC,IAAS;IACb,OAAO,IAAI,CAACX,IAAI,CAACO,IAAI,CAAM,oCAAoC,EAAEI,IAAI,CAAC,CACnEC,IAAI;IACH;IACAf,GAAG,CAACgB,QAAQ,IAAG;MACb,IAAI,CAACZ,eAAe,GAAG,IAAI;MAC3B,IAAI,CAACC,SAAS,GAAGW,QAAQ,CAACC,KAAK;MAC/B,OAAOD,QAAQ;IACjB,CAAC,CAAC,CACH;EACL;EACAE,MAAMA,CAAA;IACJ,IAAI,CAACd,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACC,SAAS,GAAG,IAAI;EACvB;EAEAc,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACf,eAAe;EAC7B;EAAC,QAAAgB,CAAA,G;qBA/BUnB,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXxB,WAAW;IAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}